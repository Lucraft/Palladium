architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/palladium.accesswidener")
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.threetag:PalladiumCore:${rootProject.palladiumcore_version}"

    // Forge Config API Port
    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-common:${rootProject.forge_config_api_port_version}"

    // Player Animator
    modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${rootProject.player_anim_version}")

    // GeckoLib
    modImplementation("software.bernie.geckolib:geckolib-forge-1.20:${rootProject.geckolib_version}")

    // KubeJS
//    modCompileOnly "dev.latvian.mods:kubejs-fabric:${rootProject.kubejs_version}"

    // Pehkui
    modCompileOnly("com.github.Virtuoel:Pehkui:${rootProject.pehkui_fabric_version}", {
        exclude group: "net.fabricmc.fabric-api"
    })

    // JEI
    modCompileOnly "mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}"

    // REI
    modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}", {
        exclude group: "dev.architectury"
    })

    // Forge Config API Port
    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-common:${rootProject.forge_config_api_port_version}"

    // Condensed Creative
    modCompileOnly "io.wispforest:condensed_creative:${rootProject.condensed_creative_version}"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    repositories {
        maven {
            url 'https://repo.repsy.io/mvn/lucraft/threetag'
            credentials {
                username System.getenv('REPSY_USERNAME')
                password System.getenv('REPSY_PASSWORD')
            }
        }
    }
}
